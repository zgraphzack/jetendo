/**
 * plugin.js
 *
 * Released under LGPL License.
 * Copyright (c) 1999-2015 Ephox Corp. All rights reserved
 *
 * License: http://www.tinymce.com/license
 * Contributing: http://www.tinymce.com/contributing
 */

/*jshint unused:false */
/*global tinymce:true */

/*
// Old event
editor.onInit(editor, args) {
    // Custom logic
});

// New event
editor.on('init', function(args) {
    // Custom logic
});

// Get someArg value inside iframe dialog
var someArg = top.tinymce.activeEditor.windowManager.getParams().someArg;

// Close the top most window
top.tinymce.activeEditor.windowManager.close();

tinyMCEPopup.requireLangPack();

var ZSAImageDialog = {
	init : function(ed) {
		this.editor=ed;
	},

	update : function(htmlCode) {
		var ed = this.editor;		
		tinyMCEPopup.restoreSelection();

		if (this.action != 'update')
			ed.selection.collapse(1);

		ed.execCommand('mceInsertContent', 0,htmlCode);

		tinyMCEPopup.close();
	}
};

tinyMCEPopup.onInit.add(ZSAImageDialog.init, ZSAImageDialog);

*/

/**
 * zsaimage plugin that adds a toolbar button and menu item.
 */
tinymce.PluginManager.add('zsaimage', function(editor, url) {
	// Add a button that opens a window
	
	function openGalleryDialog(){
			// Open window with a specific url
			editor.windowManager.open({
				title: 'Insert Image',
				url: url + '/dialog.htm',
				width: 600,
				height: 400,
				buttons: [
					/*{
						text: 'Insert',
						onclick: function() {
							// Top most window object
							var win = editor.windowManager.getWindows()[0];

							// Insert the contents of the dialog.html textarea into the editor
							editor.insertContent(win.getContentWindow().document.getElementById('content').value);

							// Close the window
							win.close();
						}
					},
*/
					{text: 'Close', onclick: 'close'}
				]
			});
		
	}
	
	editor.addButton('zsaimage', {
		text: 'Insert Image',
		icon: false,
		onclick: openGalleryDialog
		/*function() {
			// Open window
			editor.windowManager.open({
				title: 'Insert Gallery Image plugin',
				body: [
					{type: 'textbox', name: 'title', label: 'Title'}
				],
				onsubmit: function(e) {
					// Insert content when the window form is submitted
					console.log(e.data);
					editor.insertContent('Title: ' + e.data.title);
				}
			});
		}*/
	});

	// Adds a menu item to the tools menu
	editor.addMenuItem('zsaimage', {
		text: 'Insert Image',
		context: 'insert',
		icon:"image",
		onclick: openGalleryDialog
	});
});